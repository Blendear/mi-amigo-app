@use "../../../styles/sass/abstracts/mixins";
@use "../../../styles/sass/abstracts/colors";
@use "../../../styles/sass/abstracts/variables";
@use "../../../styles/sass/base/typography";

.schedule {
  // height: 76vh; turned off since footer is turned off
  height: 85vh;
  width: 100%;
  overflow-y: scroll;

  &::-webkit-scrollbar {
    display: none;
  }

  &__grid {
    display: grid;
    grid-template-columns: 1fr 9fr;
    grid-template-rows: 1fr;
    column-gap: 1.5rem;
    font-size: typography.$font-size-md;

    @mixin schedule-rows {
      grid-template-rows: repeat(96, 5rem);
    }

    &__time-blocks {
      @include schedule-rows;
      display: grid;
      grid-template-columns: 1fr;

      @mixin line-before-time($width) {
        content: "";
        display: block;
        width: $width;
        height: 0.2rem;
        background-color: rgb(colors.$primary-light, 0.3);
      }

      & > div > span {
        // color: rgb(colors.$primary-light, 0.3);
        color: black;
      }

      & > div > span {
        padding: 0 1rem;
        display: none;
      }

      & > div:nth-child(4n + 1) > span {
        display: block;
      }

      & > div:nth-child(4n + 3):before {
        @include line-before-time(20%);
      }

      & > div:first-child:before,
      > div:nth-child(4n + 1):before {
        @include line-before-time(100%);
      }
      &__block {
        &--active {
          background-color: rgba(255, 255, 255, 0.25);
        }
      }
    }

    &__events {
      display: grid;
      grid-template-columns: 3fr 1fr;
      @include schedule-rows;

      &__event {
        overflow: hidden;
        border-radius: variables.$border-radius-md;
        // border: 0.1rem solid rgb(colors.$primary-light, 0.3);
        display: grid;

        & > div:nth-of-type(1) {
          height: 10rem;
          border-radius: variables.$border-radius-md variables.$border-radius-md
            0 0;
          box-shadow: inset 0 0 7px 5px rgb(0, 0, 0, 0.75);

          & > span {
            z-index: -1;
            filter: saturate(0);
          }

          // &::after {
          //   content: "";
          //   display: block;
          //   position: absolute;
          //   width: 100%;
          //   height: 100%;
          //   top: 0;
          // }
        }
      }
    }
  }
}
